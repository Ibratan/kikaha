<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.skullabs.kikaha</groupId>
	<version>1.0.0-SNAPSHOT</version>
	<artifactId>kikaha-project</artifactId>
	<name>Kikaha</name>
	<packaging>pom</packaging>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git@github.com:Skullabs/kikaha.git</connection>
		<url>scm:git:git@github.com:Skullabs/kikaha.git</url>
		<developerConnection>scm:git:git@github.com:Skullabs/kikaha.git</developerConnection>
	</scm>

	<repositories>
		<repository>
			<id>release-repository</id>
			<name>Texo Release Repository</name>
			<url>http://skullabs.io:8081/content/repositories/PublicRelease/</url>
			<snapshots><enabled>false</enabled></snapshots>
			<releases><enabled>true</enabled></releases>
		</repository>
		<repository>
			<id>snapshot-repository</id>
			<name>Texo Snapshot Repository</name>
			<url>http://skullabs.io:8081/content/repositories/PublicSnapshot/</url>
			<snapshots><enabled>true</enabled></snapshots>
			<releases><enabled>false</enabled></releases>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>release-repository</id>
			<name>Skullabs Release Repository</name>
			<url>http://skullabs.io:8081/content/repositories/PublicRelease/</url>
		</repository>
		<snapshotRepository>
			<id>snapshot-repository</id>
			<name>Skullabs Snapshot Repository</name>
			<url>http://skullabs.io:8081/content/repositories/PublicSnapshot/</url>
		</snapshotRepository>
	</distributionManagement>

	<developers>
		<developer>
			<id>ladraum</id>
			<email>ladraum@gmail.com</email>
			<name>Ricardo Mattiazzi Baumgartner</name>
		</developer>
		<developer>
			<id>miere</id>
			<email>miere.teixeira@gmail.com</email>
			<name>Miere Liniel Teixeira</name>
		</developer>
	</developers>

	<modules>
		<module>kikaha-core</module>
		<module>kikaha-build</module>
		<module>kikaha-urouting</module>
		<module>kikaha-hazelcast</module>
		<module>kikaha-maven-plugin</module>
	</modules>

	<properties>
		<!-- Dependencies Versions -->
		<version.junit>4.10</version.junit>
		<version.lombok>1.14.4</version.lombok>
		<version.mockito>1.9.5</version.mockito>
		<version.undertow>1.1.0.Beta6</version.undertow>
		<version.trip>1.1.0</version.trip>
		<version.config>1.2.0</version.config>
		<version.jackson>2.4.0</version.jackson>
		<version.hazelcast>3.2.5</version.hazelcast>
		<!-- Plugin's Versions -->
		<version.compiler.plugin>2.5.1</version.compiler.plugin>
		<version.eclipse.plugin>2.9</version.eclipse.plugin>
		<version.maven.plugin>2.3.2</version.maven.plugin>
		<version.assembly.plugin>2.2.1</version.assembly.plugin>
		<version.jar.plugin>2.4</version.jar.plugin>
		<version.build.helper.plugin>1.8</version.build.helper.plugin>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Test time dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${version.mockito}</version>
				<scope>test</scope>
			</dependency>
			<!-- Compile time dependencies -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${version.lombok}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>io.skullabs.trip</groupId>
				<artifactId>trip-processor</artifactId>
				<version>${version.trip}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Module dependencies -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<version>${project.version}</version>
				<artifactId>kikaha-core</artifactId>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<version>${project.version}</version>
				<artifactId>kikaha-urouting</artifactId>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<version>${project.version}</version>
				<artifactId>kikaha-hazelcast</artifactId>
				<scope>compile</scope>
			</dependency>
			<!-- Main project dependencies -->
			<dependency>
				<groupId>io.skullabs.trip</groupId>
				<artifactId>trip-core</artifactId>
				<version>${version.trip}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.typesafe</groupId>
				<artifactId>config</artifactId>
				<version>${version.config}</version>
			</dependency>
			<dependency>
				<groupId>io.undertow</groupId>
				<artifactId>undertow-core</artifactId>
				<version>${version.undertow}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${version.jackson}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${version.hazelcast}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-client</artifactId>
				<version>${version.hazelcast}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Mandatory dependencies -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>io.skullabs.trip</groupId>
			<artifactId>trip-processor</artifactId>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>${project.basedir}/source</sourceDirectory>
		<testSourceDirectory>${project.basedir}/tests</testSourceDirectory>
		<directory>${project.basedir}/output</directory>
		<outputDirectory>${project.basedir}/output/classes</outputDirectory>
		<testOutputDirectory>${project.basedir}/output/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>${project.basedir}/source</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${project.build.directory}/generated-sources/annotations</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/tests</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>${project.build.directory}/generated-sources/test-annotations</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${version.eclipse.plugin}</version>
				<configuration>
					<projectNameTemplate>[name]</projectNameTemplate>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<optimize>true</optimize>
					<debug>false</debug>
					<encoding>UTF-8</encoding>
					<includes>
						<include>**/*.java</include>
						<include>META-INF/*</include>
					</includes>
					<generatedSourcesDirectory>${project.build.directory}/generated-sources/annotations</generatedSourcesDirectory>
					<generatedTestSourcesDirectory>${project.build.directory}/generated-sources/test-annotations</generatedTestSourcesDirectory>
				</configuration>
			</plugin>
			<!-- FIX the maven compiler plugin behavior that misses the generated 
				resources generated by APT's when the ${project.build.directory} was changed 
				from standard directory. -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${version.build.helper.plugin}</version>
				<executions>
					<execution>
						<id>generate-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>add-source</goal>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/annotations</source>
							</sources>
							<resources>
								<directories>
									<directory>${project.build.directory}/generated-sources/annotations</directory>
								</directories>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>generate-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-source</goal>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/test-annotations</source>
							</sources>
							<resources>
								<directories>
									<directory>${project.build.directory}/generated-sources/test-annotations</directory>
								</directories>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- FIX the maven surefire plugin behavior that misses the generated 
				resources generated by APT's when the ${project.build.directory} was changed 
				from standard directory. -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>
							${project.build.directory}/generated-sources/annotations
						</additionalClasspathElement>
						<additionalClasspathElement>
							${project.build.directory}/generated-sources/test-annotations
						</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<!-- FIX the maven surefire plugin behavior that misses the generated 
				resources generated by APT's when the ${project.build.directory} was changed 
				from standard directory. -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
							<resources>
								<resource>
									<directory>${project.build.directory}/generated-sources/annotations</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.assembly.plugin}</version>
					<configuration>
						<descriptors>
							<descriptor>configurations/assembly.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
